application.args=
application.title=Remote Control Server
application.vendor=Nikos Fotiou
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/Remote_Control_Server.jar
dist.javadoc.dir=${dist.dir}/javadoc
excludes=
file.reference.bluecove-gpl.jar=lib/bluecove-gpl.jar
file.reference.bluecove.jar=lib/bluecove.jar
file.reference.bluecove.jar-1=lib/bluecove.jar
file.reference.cldcapi10.jar=lib/cldcapi10.jar
file.reference.jsr082.jar=lib/jsr082.jar
file.reference.piccolo.jar=lib/piccolo.jar
includes=**
jar.compress=false
javac.classpath=\
    ${file.reference.bluecove-gpl.jar}:\
    ${file.reference.bluecove.jar}:\
    ${file.reference.cldcapi10.jar}:\
    ${file.reference.jsr082.jar}:\
    ${file.reference.piccolo.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=remoteserver.RemoteServer
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
src.dir=src
test.src.dir=test
